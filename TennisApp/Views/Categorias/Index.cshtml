@using PagedList;
@using PagedList.Mvc;

@model IPagedList<TennisApp.Models.Categoria>

@{
    ViewBag.Title = "Lista de Categorias";
}
@if (TempData["Create"] != null)
{
    <div id="msg" class="alert alert-success fade in">
        <strong>Categoria criada!</strong>
        A Categoria " @TempData["Create"].ToString() " foi criada com sucesso.
    </div>
}
@if (TempData["Edit"] != null)
{
    <div id="msg" class="alert alert-warning fade in">
        <strong>Categoria editada!</strong>
        A Categoria " @TempData["Edit"].ToString() " foi editada com sucesso.
    </div>
}
@if (TempData["Delete"] != null)
{
    <div id="msg" class="alert alert-success fade in">
        <strong>Categoria editada!</strong>
        A Categoria " @TempData["Delete"].ToString() " foi eliminada com sucesso.
    </div>
}
@if (TempData["Error"] != null)
{
    <div id="msg" class="alert alert-danger fade in">
        <strong>Erro!</strong>
        Ocorreu um erro: @TempData["Error"].ToString() .
    </div>
}
<h2>Lista de Categorias</h2>
<div>
    @Html.ActionLink("Criar uma nova Categoria", "Create")
    @using (Html.BeginForm("Index", "Categorias", FormMethod.Get))
    {
        <b>Procurar por: </b>
        @Html.RadioButton("searchBy", "Categoria", true) <text>Categoria</text>
        @Html.RadioButton("searchBy", "Descricao", true) <text>Descrição</text>
        <br />
        @Html.TextBox("search", null, new { id = "txtSearch" })  <input type="submit" value="Procurar" />
    }

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Categoria", "Index", new { sortBy = ViewBag.SortCategoriaParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Descricao)
            </th>
            <th></th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="4"> Não foi encontrado o que procura.</td>
            </tr>
        }

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descricao)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.IdCategoria }) |
                    @Html.ActionLink("Detalhes", "Details", new { id = item.IdCategoria }) |
                    @Html.ActionLink("Remover", "Delete", new { id = item.IdCategoria })
                </td>
            </tr>
        }

    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    searchBy = Request.QueryString["searchBy"],
    search = Request.QueryString["search"],
    sortBy = Request["sortBy"]
}),
new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
</div>

<script>
	$(document).ready(function () {
		// esconde a mensagem de alerta que apareça
		setTimeout(function () {
			$("#msg").fadeOut(1000);
		}, 6000);
	});

</script>
