@using PagedList;
@using PagedList.Mvc;
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using TennisApp.Models;

@model IPagedList<TennisApp.Models.Utilizador>

@{
    ViewBag.Title = "Gestão de Utilizadores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["Create"] != null)
{
    <div id="msg" class="alert alert-success fade in">
        <strong>Utilizador criado!</strong>
        O Utilizador " @TempData["Create"].ToString() " foi criado com sucesso.
    </div>
}
@if (TempData["Edit"] != null)
{
    <div id="msg" class="alert alert-warning fade in">
        <strong>Utilizador editado!</strong>
        O Utilizador " @TempData["Edit"].ToString() " foi editado com sucesso.
    </div>
}
@if (TempData["Delete"] != null)
{
    <div id="msg" class="alert alert-success fade in">
        <strong>Utilizador editado!</strong>
        O Utilizador " @TempData["Delete"].ToString() " foi eliminado com sucesso.
    </div>
}
@if (TempData["Error"] != null)
{
    <div id="msg" class="alert alert-danger fade in">
        <strong>Erro!</strong>
        Ocorreu um erro: @TempData["Error"].ToString() .
    </div>
}
<script src="~/Scripts/jquery-1.10.2.js"></script>

<div>

    <div class="row" style="padding:5px;">
        <div class="col col-md-9" style="font-size:14px;">
            @using (Html.BeginForm("Index", "Utilizadors", FormMethod.Get))
            {
                <div class="row justify-content-center my-3">
                    <label style="float:left; margin-right:10px;">Procurar por:</label>
                    <text>Nome</text>@Html.RadioButton("searchBy", "Nome", false)
                    <text>UserName</text>@Html.RadioButton("searchBy", "UserName", false)
                </div>
                <div class="row">
                    @Html.TextBox("search")  <input type="submit" value="Procurar" />
                </div>
            }
        </div>
        <div class="col-12 col-lg-2" style="font-size:14px;">
            @if (User.IsInRole("Administrador"))
            {
                <label>@Html.ActionLink("Criar um novo Utilizador", "Create")</label>
            }
        </div>
    </div>
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Nome", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.ActionLink("Tipo", "Index", new { sortBy = ViewBag.SortTipoParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Telemovel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DataNasc)
            </th>
            <th>
                @Html.ActionLink("Username", "Index", new { sortBy = ViewBag.SortUsernameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th></th>
        </tr>
        @if (Model.Count() == 0)
            {
            <tr>
                <td colspan="4"> Não foi encontrado o que procura.</td>
            </tr>
        }
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tipo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Telemovel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNasc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.IdUtilizador }) |
                    @Html.ActionLink("Detalhes", "Details", new { id = item.IdUtilizador }) |
                    @Html.ActionLink("Remover", "Delete", new { id = item.IdUtilizador })
                </td>
            </tr>
        }

    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    searchBy = Request.QueryString["searchBy"],
    search = Request.QueryString["search"],
    sortBy = Request["sortBy"]
}),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
</div>

<script>
    $(document).ready(function () {
        // esconde a mensagem de alerta que apareça
        setTimeout(function () {
            $("#msg").fadeOut(1000);
        }, 6000);
    });

</script>
