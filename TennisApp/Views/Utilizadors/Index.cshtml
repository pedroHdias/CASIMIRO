@using PagedList;
@using PagedList.Mvc;

@model IPagedList<TennisApp.Models.Utilizador>

@{
    ViewBag.Title = "Lista de Utilizadores";
}

<h2>Lista de Utilizadores</h2>

<div>
    @Html.ActionLink("Criar um novo Utilizador", "Create")
    @using (Html.BeginForm("Index", "Utilizadors", FormMethod.Get))
    {
        <b>Procurar por: </b>
        @Html.RadioButton("searchBy", "Nome", true) <text>Nome</text>
        @Html.RadioButton("searchBy", "UserName", true) <text>UserName</text>
        <br />
        @Html.TextBox("search")  <input type="submit" value="Procurar" />
    }

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Nome", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Telemovel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DataNasc)
            </th>
            <th>
                @Html.ActionLink("Username", "Index", new { sortBy = ViewBag.SortUsernameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th></th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="4"> Não foi encontrado o que procura.</td>
            </tr>
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Telemovel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNasc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.IdUtilizador }) |
                    @Html.ActionLink("Detalhes", "Details", new { id = item.IdUtilizador }) |
                    @Html.ActionLink("Remover", "Delete", new { id = item.IdUtilizador })
                </td>
            </tr>
        }

    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    searchBy = Request.QueryString["searchBy"],
    search = Request.QueryString["search"],
    sortBy = Request["sortBy"]
}),
new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
</div>