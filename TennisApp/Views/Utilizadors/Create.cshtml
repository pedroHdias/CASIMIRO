@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using TennisApp.Models;

@model TennisApp.Models.RegisterViewModel


@{
    ViewBag.Title = "Criar";
    //Preenche as dropdowns e a lista de roles existt
    List<string> roles;
    List<string> users;
    using (var context = new ApplicationDbContext())
    {
        var roleStore = new RoleStore<IdentityRole>(context);
        var roleManager = new RoleManager<IdentityRole>(roleStore);

        var userStore = new UserStore<ApplicationUser>(context);
        var userManager = new UserManager<ApplicationUser>(userStore);

        users = (from u in userManager.Users select u.UserName).ToList();
        roles = (from r in roleManager.Roles select r.Name).ToList();
    }
    ViewBag.Roles = new SelectList(roles);
    ViewBag.Users = new SelectList(users);
    ViewBag.RolesList = roles;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["Create"] != null)
{
    <div id="msg" class="alert alert-success fade-in">
        <strong>Utilizador criado!</strong>
        O Utilizador " @TempData["Create"].ToString() " foi criado com sucesso.
    </div>
}
@if (TempData["Error"] != null)
{
    <div id="msg" class="alert alert-danger fade-in">
        <strong>Erro!</strong>
        Ocorreu um erro: @TempData["Error"].ToString() .
    </div>
}
<h2>Criar</h2>


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <hr />
    //Nome da pessoa
    <div class="form-group">
        @Html.LabelFor(m => m.Utilizador.Nome, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Utilizador.Nome, new { @class = "form-control" })
        </div>
    </div>
    //telemovel da pessoa
    <div class="form-group">
        @Html.LabelFor(m => m.Utilizador.Telemovel, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Utilizador.Telemovel, new { @class = "form-control" })
        </div>
    </div>
    //Data de Nasc. da pessoa
    <div class="form-group">
        @Html.LabelFor(m => m.Utilizador.DataNasc, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Utilizador.DataNasc, new { @class = "form-control" })
        </div>
    </div>

    <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Registar" />
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $(document).ready(function () {
        // esconde a mensagem de alerta que apareça
        setTimeout(function () {
            $("#msg").fadeOut(1000);
        }, 6000);
    });

</script>
